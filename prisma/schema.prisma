// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model User {
  id                String  @id @default(uuid()) @db.Uuid
  email             String  @unique
  username          String  @unique
  passwordHash      String
  authId            String  @unique
  passwordResetHash String? @unique

  createdAt DateTime @default(now())
}

model Task {
  id          String           @id(map: "PK_fb213f79ee45060ba925ecd576e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  updatedAt   DateTime         @default(now()) @db.Timestamp(6)
  name        String           @db.VarChar
  data        Json
  retries     Int              @default(0)
  status      task_status_enum @default(CREATED)
  eventId     String?          @db.VarChar
  parentId    String?          @db.Uuid
  parentRunId String?          @db.Uuid
  isBig       Boolean          @default(false)
  task        Task?            @relation("taskTotask_parentId", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8c9920b5fb32c3d8453f64b705c")
  parentRun   TaskRun?         @relation("task_parentRunIdTotask_run", fields: [parentRunId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_48c75f78c70ab6dfc646c93fa74")
  parent      Task[]           @relation("taskTotask_parentId")
  runs        TaskRun[]        @relation("taskTotask_run_taskId")

  @@index([status, retries, isBig, createdAt])
  @@index([createdAt], map: "task_createdat_index")
  @@index([id])
  @@map("task")
}

model TaskRun {
  id         String               @id(map: "PK_36326cc52f4708f36ae4e6158cc") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime             @default(now()) @db.Timestamp(6)
  updatedAt  DateTime             @default(now()) @db.Timestamp(6)
  status     task_run_status_enum
  finishedAt DateTime?            @db.Timestamptz(6)
  taskId     String?              @db.Uuid
  task       Task?                @relation("taskTotask_run_taskId", fields: [taskId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dad807e0562e20f2ccf739d7cde")
  subtasks   Task[]               @relation("task_parentRunIdTotask_run")

  @@index([taskId])
  @@index([taskId], map: "task_run_taskid_index")
  @@map("task_run")
}

enum task_run_status_enum {
  created
  running
  done
  error
}

enum task_status_enum {
  CREATED
  RUNNING
  SUCCESS
  ERROR
}
